server.port=8080
spring.mvc.view.prefix=classpath:/templates/
spring.mvc.view.suffix=.html

#\u914D\u7F6E\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.datasource.names=ds-0,ds-1
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
# \u5206\u522B\u914D\u7F6E\u591A\u4E2A\u6570\u636E\u6E90\u7684\u8BE6\u7EC6\u4FE1\u606F
spring.shardingsphere.datasource.ds-0.username=root
spring.shardingsphere.datasource.ds-0.password=123456
spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://192.168.221.128:3306/shard01?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-1.username=root
spring.shardingsphere.datasource.ds-1.password=123456
spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://192.168.221.128:3306/shard02?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8# \u914D\u7F6E\u6570\u636E\u5E93\u7684\u5206\u5E93\u7B56\u7565\uFF0C\u5176\u4E2Ddatabase-inline\u4F1A\u5728\u540E\u9762\u58F0\u660E
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
# \u914D\u7F6Et_order\u8868\u7684\u5206\u8868\u7B56\u7565\uFF0C\u5176\u4E2Dt-order-inline\u4F1A\u5728\u540E\u9762\u58F0\u660E
# \u884C\u8868\u8FBE\u5F0F\u6807\u8BC6\u7B26\u53EF\u4EE5\u4F7F\u7528 ${...} \u6216 $->{...}\uFF0C\u4F46\u524D\u8005\u4E0E Spring \u672C\u8EAB\u7684\u5C5E\u6027\u6587\u4EF6\u5360\u4F4D\u7B26\u51B2\u7A81\uFF0C\u56E0\u6B64\u5728 Spring \u73AF\u5883\u4E2D\u4F7F\u7528\u884C\u8868\u8FBE\u5F0F\u6807\u8BC6\u7B26\u5EFA\u8BAE\u4F7F\u7528 $->{...}
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds-$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline# \u914D\u7F6Eorder_id\u91C7\u7528\u96EA\u82B1\u7B97\u6CD5\u751F\u6210\u5168\u5C40id\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake
# \u914D\u7F6E\u5177\u4F53\u7684\u5206\u5E93\u5206\u8868\u89C4\u5219
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}# \u914D\u7F6E\u96EA\u82B1\u7B97\u6CD5
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

#???????
spring.shardingsphere.datasource.names=ds-0,ds-1
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver# ??????????????
spring.shardingsphere.datasource.ds-0.username=root
spring.shardingsphere.datasource.ds-0.password=123456
spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://192.168.221.128:3306/shard01?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-1.username=root
spring.shardingsphere.datasource.ds-1.password=123456
spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://192.168.221.128:3306/shard02?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8# ?????????????database-inline??????
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
# ??t_order?????????t-order-inline??????
# ??????????? ${...} ? $->{...}????? Spring ???????????????? Spring ???????????????? $->{...}
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds-$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline
# ??order_id??????????id?
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake# ???????????
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}
# ??????\
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE\
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123


spring.shardingsphere.datasource.names=ds-0
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds-0.username=root
spring.shardingsphere.datasource.ds-0.password=123456
spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://192.168.221.128:3306/shard01?\
  serverTimezone=UTC&\
  useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.actual-data-nodes=ds-0.t_order_volume_range_$->{0..2}
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.table-strategy.standard.sharding-algorithm-name=t-order-volume-range
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-volume-range.type=VOLUME_RANGE#??????0-200
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-volume-range.props.range-lower=200#??????600 ?????600????
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-volume-range.props.range-upper=600# ?????????200
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-volume-range.props.sharding-volume=200
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds-$->{0..1}.t_order_$->{0..1}

# \u5E7F\u64AD\u8868, \u5176\u4E3B\u8282\u70B9\u662Fds0
spring.shardingsphere.sharding.broadcast-tables=t_config
spring.shardingsphere.sharding.tables.t_config.actual-data-nodes=ds$->{0}.t_config

# \u7ED1\u5B9A\u8868\u89C4\u5219\uFF0C\u591A\u7EC4\u7ED1\u5B9A\u89C4\u5219\u4F7F\u7528\u6570\u7EC4\u5F62\u5F0F\u914D\u7F6E
# spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item
spring.shardingsphere.rules.sharding.binding-tables[0]=   # \u7ED1\u5B9A\u8868\u89C4\u5219\u5217\u8868
spring.shardingsphere.rules.sharding.binding-tables[1]= # \u7ED1\u5B9A\u8868\u89C4\u5219\u5217\u8868
spring.shardingsphere.rules.sharding.binding-tables[x]= # \u7ED1\u5B9A\u8868\u89C4\u5219\u5217\u8868

# database-mod\u662F\u81EA\u5B9A\u4E49\u5B57\u7B26\u4E32\u540D\u5B57
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-mod
# MOD\u8868\u793A\u53D6\u6A21\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.database-mod.type=MOD
# \u8868\u793A\u5206\u7247\u6570\u91CF
spring.shardingsphere.rules.sharding.sharding-algorithms.database-mod.props.sharding-count=2

# database-mod\u662F\u81EA\u5B9A\u4E49\u5B57\u7B26\u4E32\u540D\u5B57
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-hash-mod
spring.shardingsphere.rules.sharding.sharding-algorithms.database-hash-mod.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.database-hash-mod.props.sharding-count=2

# BOUNDARY_RANGE \u8868\u793A\u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-boundary-range.type=BOUNDARY_RANGE
# \u5206\u7247\u7684\u8303\u56F4\u8FB9\u754C\uFF0C\u591A\u4E2A\u8303\u56F4\u8FB9\u754C\u4EE5\u9017\u53F7\u5206\u9694
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-boundary-range.props.sharding-ranges=1000,20000,300000

spring.shardingsphere.rules.sharding.tables.t_order_volume_range.actual-data-nodes=ds-0.t_order_volume_range_$->{0..2}
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.table-strategy.standard.sharding-column=create_dates
pring.shardingsphere.rules.sharding.tables.t_order_volume_range.table-strategy.standard.sharding-algorithm-name=t-order-auto-interval
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_volume_range.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-auto-interval.type=AUTO_INTERVAL
# \u5206\u7247\u7684\u8D77\u59CB\u65F6\u95F4\u8303\u56F4\uFF0C\u65F6\u95F4\u6233\u683C\u5F0F\uFF1Ayyyy-MM-dd HH:mm:ss
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-auto-interval.props.datetime-lower=2010-01-01 23:59:59
# \u5206\u7247\u7684\u7ED3\u675F\u65F6\u95F4\u8303\u56F4\uFF0C\u65F6\u95F4\u6233\u683C\u5F0F\uFF1Ayyyy-MM-dd HH:mm:ss
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-auto-interval.props.datetime-upper=2021-01-01 23:59:59
# \u5355\u4E00\u5206\u7247\u6240\u80FD\u627F\u8F7D\u7684\u6700\u5927\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2\uFF0C\u4E0B\u9762\u7684\u6570\u5B57\u8868\u793A1\u5E74
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-auto-interval.props.sharding-seconds='31536000'

spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}

spring.shardingsphere.rules.sharding.tables.t_order_standard.actual-data-nodes=ds-0.t_order_standard_$->{0..3}
spring.shardingsphere.rules.sharding.tables.t_order_standard.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_standard.table-strategy.standard.sharding-algorithm-name=standard-mod
spring.shardingsphere.rules.sharding.tables.t_order_standard.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_standard.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.sharding-algorithms.standard-mod.type=STANDARD_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.standard-mod.props.algorithm-class-name=com.gupao.sharding.example.StandardModTableShardAlgorithm
